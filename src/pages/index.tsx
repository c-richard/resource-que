import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const { data: sessionData } = useSession();
  const utils = trpc.useContext();

  const currentUserId = sessionData?.user?.id;

  const { data: resources } = trpc.resource.getByUserId.useQuery(
    currentUserId || "",
    {
      enabled: currentUserId !== undefined,
    }
  );

  const createResource = trpc.resource.create.useMutation({
    onSettled: () => {
      utils.resource.getByUserId.invalidate();
    },
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {resources && resources.length > 0 && (
          <ul>
            {resources.map((r) => (
              <div key={r.id}>Resource: {r.name}</div>
            ))}
          </ul>
        )}
        {currentUserId !== undefined && (
          <button
            onClick={() =>
              createResource.mutate({
                name: "jeff",
                ownerId: currentUserId,
              })
            }
          >
            Create Resource
          </button>
        )}

        <button onClick={sessionData ? () => signOut() : () => signIn()}>
          {sessionData ? "Sign out" : "Sign in"}
        </button>
      </main>
    </>
  );
};

export default Home;
